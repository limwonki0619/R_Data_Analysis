group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_col(width = 0.001) +
geom_point()
# 문제 8
library(ggplot2)
library(dplyr)
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_col(width = 0.001) +
geom_point()
# 8-2
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_col(width = 0.1) +
geom_point()
# 8-2
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_bar(stat="identity")
# 8-2
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_bar(stat="identity") +
geom_text(aes(x=clarity,y=mean_price, label=price, size = 3), color="white", family ="hanna") +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "Clarity별 도수", y = "가격") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
# 8-2
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_bar(stat="identity") +
geom_text(aes(x=clarity,y=mean_price, label=mean_price, size = 3), color="white", family ="hanna") +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "Clarity별 도수", y = "가격") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
# 문제 9
baseball <- read.csv("C:/Users/1pc/Desktop/실습용_데이터/야구성적.csv")
# 8-2
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_bar(stat="identity") +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "Clarity별 평균가격변화", y = "가격") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
windowsFonts(hanna=windowsFont("BM HANNA 11yrs old")) # 폰트이름 변경
windowsFonts(dohyeon=windowsFont("BM DoHyeon"))
windowsFonts(jalnan=windowsFont("Jalnan"))
windowsFonts(binggrae=windowsFont("Binggrae Taom"))
# 8-2
diamonds %>%
select(clarity,price) %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=reorder(clarity, -mean_price),y=mean_price,fill=clarity)) +
geom_bar(stat="identity") +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "Clarity별 평균가격변화", y = "가격") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
df_score$학점 <- for(i in 1:4) {
if(df_score$평균 >= 90) {
df_score$학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
} df_score$학점 <- "F"
}
df_score$학점 <- for(i in 1:4) {
if(df_score$평균 >= 90) {
df_score$학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
}
df_score$학점 <- "F"
}
df_score$학점
# 문제 2
# 2-1)
df_score <- data.frame(이름 = c("강경학","김태균","이성열","정은원"),
중간 = c(90,78,94,70),
기말 = c(50,60,90,92))
# 2-2)
df_score$평균 <- apply(df_score[,2:3],1,mean)
df_score$학점 <- for(i in 1:4) {
if(df_score$평균 >= 90) {
df_score$학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
}
df_score$학점 <- "F"
}
df_score
df_score$학점 <- for(i in 1:4) {
if(df_score$평균 >= 90) {
df_score$학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
} df_score$학점 <- "F"
}
df_score$학점 <- NULL
df_score$학점 <- for(i in 1:4) {
if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
} df_score$학점 <- "F"
}
}
df_score$학점 <- if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
} df_score$학점 <- "F"
}
df_score$학점 <- if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if (df_score$평균 >= 60) {
df_score$학점 <- "C"
} df_score$학점 <- "F"
df_score$학점 <- if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if(df_score$평균 >= 60) {
df_score$학점 <- "D"
} df_score$학점 <- "F"
df_score$학점 <- if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if(df_score$평균 >= 60) {
df_score$학점 <- "D"
} "F"
df_score$학점 <- if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if(df_score$평균 >= 60) {
df_score$학점 <- "D" ,"F"
}
df_score$학점 <- if(df_score$평균 >= 90) {
학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if(df_score$평균 >= 60) {
df_score$학점 <- "D"
}
df_score$학점 <- if(df_score$평균 >= 90) {
df_score$학점 <- "A"
} else if(df_score$평균 >= 80) {
df_score$학점 <- "B"
} else if(df_score$평균 >= 70) {
df_score$학점 <- "C"
} else if(df_score$평균 >= 60) {
df_score$학점 <- "D"
}
library(dplyr)
df_score$등급 <- ifelse(df_score$평균 >= 90,"A",
ifelse(df_score$평균 >= 80, "B",
ifelse(df_score$평균 >= 70,"C",
ifelse(df_score$평균 >= 60,"D","F")
)
)
)
# 문제 2
# 2-1)
df_score <- data.frame(이름 = c("강경학","김태균","이성열","정은원"),
중간 = c(90,78,94,70),
기말 = c(50,60,90,92))
# 2-2)
df_score$평균 <- apply(df_score[,2:3],1,mean)
# 문제3
df_score$등급 <- NULL
df_score$등급 <- ifelse(df_score$평균 >= 90,"A",
ifelse(df_score$평균 >= 80, "B",
ifelse(df_score$평균 >= 70,"C",
ifelse(df_score$평균 >= 60,"D","F")
)
)
)
df_score$등급
boxplot(setosa$Sepal.Width)$stat
setosa <- iris %>%
filter(Species=="setosa") %>%
select(Sepal.Width)
boxplot(setosa$Sepal.Width)$stat
# 같은 코드
setosa3 <- ifelse(
boxplot(setosa$Sepal.Width)$stat[1] < setosa$Sepal.Width < boxplot(setosa$Sepal.Width)$stat[5],
setosa$Sepal.Width, NA)
# 같은 코드
setosa3 <- ifelse(
boxplot(setosa$Sepal.Width)$stat[1] < setosa$Sepal.Width &
setosa$Sepal.Width < boxplot(setosa$Sepal.Width)$stat[5],
setosa$Sepal.Width, NA)
ifelse(
boxplot(setosa$Sepal.Width)$stat[1] < setosa$Sepal.Width &
setosa$Sepal.Width < boxplot(setosa$Sepal.Width)$stat[5],
setosa$Sepal.Width, NA)
setosa3
# 같은 코드
setosa3 <- ifelse(boxplot(setosa$Sepal.Width)$stat[1] <= setosa$Sepal.Width &
setosa$Sepal.Width <= boxplot(setosa$Sepal.Width)$stat[5],
setosa$Sepal.Width, NA)
setosa2 <- ifelse(setosa$Sepal.Width < boxplot(setosa$Sepal.Width)$stat[1] |
setosa$Sepal.Width > boxplot(setosa$Sepal.Width)$stat[5], NA, setosa$Sepal.Width)
setosa <- iris %>%
filter(Species=="setosa") %>%
select(Sepal.Width)
boxplot(setosa$Sepal.Width)$stat # boxplot의 울타리 내 값과 그래프 출력
mean(setosa$Sepal.Width); sd(setosa$Sepal.Width) # 이상치 제거 전 평균과 표준편차
setosa2 <- ifelse(setosa$Sepal.Width < boxplot(setosa$Sepal.Width)$stat[1] |
setosa$Sepal.Width > boxplot(setosa$Sepal.Width)$stat[5], NA, setosa$Sepal.Width)
setosa2 <- ifelse(setosa$Sepal.Width < boxplot(setosa$Sepal.Width)$stat[1] |
setosa$Sepal.Width > boxplot(setosa$Sepal.Width)$stat[5], NA, setosa$Sepal.Width)
# 같은 코드
setosa3 <- ifelse(boxplot(setosa$Sepal.Width)$stat[1] <= setosa$Sepal.Width &
setosa$Sepal.Width <= boxplot(setosa$Sepal.Width)$stat[5],
setosa$Sepal.Width, NA)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty)) %>%
arrange(desc(mean_hwy_cty)) %>% head(3)
# 문제 6
str(mpg)
# 문제 6
library(ggplot2)
str(mpg)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty)) %>%
arrange(desc(mean_hwy_cty)) %>% head(3)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty)) %>%
arrange(desc(mean_hwy_cty)) %>% head(3)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty))
# 7-2) 막대 그래픠 형식의 컬러 그래프를 그리시오
mpg %>%
filter(class=="suv") %>%
select(manufacturer,class,cty) %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(7) %>%
ggplot(aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,fill=manufacturer)) +
geom_bar(stat = "identity") +
geom_text(aes(x=manufacturer,y=mean_cty-0.5, label=round(mean_cty,1), size = 3), color="white", family ="hanna") +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "SUV자동차의 시내연비 TOP7", y = "시내 평균연비") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
library(extrafont)
windowsFonts(hanna=windowsFont("BM HANNA 11yrs old")) # 폰트이름 변경
windowsFonts(dohyeon=windowsFont("BM DoHyeon"))
windowsFonts(jalnan=windowsFont("Jalnan"))
windowsFonts(binggrae=windowsFont("Binggrae Taom"))
# 7-2) 막대 그래픠 형식의 컬러 그래프를 그리시오
mpg %>%
filter(class=="suv") %>%
select(manufacturer,class,cty) %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(7) %>%
ggplot(aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,fill=manufacturer)) +
geom_bar(stat = "identity") +
geom_text(aes(x=manufacturer,y=mean_cty-0.5, label=round(mean_cty,1), size = 3), color="white", family ="hanna") +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "SUV자동차의 시내연비 TOP7", y = "시내 평균연비") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty)) %>%
arrange(desc(mean_hwy_cty)) %>% head(3)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty)) %>%
arrange(desc(mean_hwy_cty))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model)
# 문제 9 : 실습 데이터 중 '야구성적.csv' 파일을 이용하여
baseball <- read.csv("C:/Users/1pc/Desktop/실습용_데이터/야구성적.csv")
# 9-2
baseball %>%
mutate(OPS = 출루율+장타율,
연봉대비OPS = OPS/연봉*100) %>%
ggplot(aes(x=선수명,y=연봉대비OPS,group=선수명,color=선수명)) +
geom_point(size=4) +
geom_segment(aes(x=선수명,xend=선수명,y=0,yend=연봉대비OPS), color="grey50") +
geom_text(aes(x=선수명,y=연봉대비OPS+5,label=round(연봉대비OPS,1),family="dohyeon")) +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(angle=45, vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "프로야구 선수별 연봉대비OPS") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x=clarity, y=mean_price, fill = clarity))
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty))
mpg %>%
filter(manufacturer=="toyota") %>%
#select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty))
mpg %>%
filter(manufacturer=="toyota") %>%
#select(manufacturer,model, hwy, cty) %>%
group_by(model)
mpg %>%
filter(manufacturer=="toyota") %>%
#select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = hwy+cty) %>%
arrange(desc(mean_hwy_cty))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = sum(hwy+cty)) %>%
arrange(desc(mean_hwy_cty)) %>% head(3)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = sum(hwy+cty)/2) %>%
arrange(desc(mean_hwy_cty)) %>% head(3)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = sum(hwy+cty)/2)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = mean(hwy+cty))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = sum(hwy+cty))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(sum_hwy_cty = mean(hwy+cty))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = hwy+cty)
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model) %>%
summarise(mean_hwy_cty = mean(hwy+cty))
mpg %>%
filter(manufacturer=="toyota") %>%
select(manufacturer,model, hwy, cty) %>%
group_by(model)
(20+20+19+17+20+17)/6
(15+16+15+15+16+14)/6
((20+20+19+17+20+17)/6)+((15+16+15+15+16+14)/6)
# 9-2
baseball %>%
mutate(OPS = 출루율+장타율,
연봉대비OPS = OPS/연봉*100) %>%
ggplot(aes(x=선수명,y=연봉대비OPS,group=선수명,color=선수명)) +
geom_point(size=4) +
geom_segment(aes(x=선수명,xend=선수명,y=0,yend=연봉대비OPS), color="grey50") +
geom_text(aes(x=선수명,y=연봉대비OPS+5,label=round(연봉대비OPS,1),family="dohyeon")) +
theme_bw(base_family = "hanna", base_size = 18) +
theme(axis.text.x = element_text(angle=45, vjust=0.5)) +
theme(axis.title.x = element_blank()) +
theme(legend.position = "none") +
labs(title = "프로야구 선수별 연봉대비OPS") +
theme(plot.title = element_text(family = "jalnan",face="bold",hjust=0.5,size = 15, color = "grey20"))
